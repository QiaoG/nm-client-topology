<?xml version="1.0" encoding="utf-8"?>
<!--
@author GQ
create time:2013-7-4- 16:25:53
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:sp="http://www.spicefactory.org/parsley"
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:presentation="com.megaeyes.netmanagement.topology.presentation.*"
		  xmlns:cps="com.megaeyes.networkmanagement.api.view.cps.*"
		  xmlns:container="com.network.components.container.*"
		  xmlns:tree="com.megaeyes.networkmanagement.api.view.tree.*"
		  creationComplete="vgroup1_creationCompleteHandler(event)" 
		  xmlns:org="com.megaeyes.networkmanagement.api.view.tree.org.*" 
		  xmlns:platform="com.megaeyes.netmanagement.topology.presentation.platform.*">
	<fx:Metadata>
		[Event(name="create_viewer_complement")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.megaeyes.netmanagement.topology.domain.vo.Topology;
			import com.megaeyes.netmanagement.topology.domain.vo.TopologyDevice;
			
			import flash.utils.setTimeout;
			
			import mx.collections.IList;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			public var parentN:NavigatorContent;
			
			[Bindable]
			public var model:TopologyViewerPM;
			
			public var topologyInfo:Topology;
			
			public var parameter:Object;
			
			protected function vgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				model.topologyInfo = topologyInfo;
				model.id = parameter.id;
				model.name = parameter.name;
				model.type = parameter.type;
				model.outline = outline;
				model.injectCanvasPM(canvas.model);
				model.injectHawkeyePM(hawkeye.model);
				model.setHawkeyeWidth(right.width);
				model.canvas.changeScrollRectLocation(0,0);
				model.configCanvasLayout();
				model.setDevices(parameter.devices);
				model.addEventListener("dirty_change",dirtyChangeHandler);
				dispatchEvent(new Event("create_viewer_complement"));
			}
			
			private function addDevicesPanel():void
			{
				var c:NavigatorContent = new NavigatorContent();
				c.label = "设备";
				var panel:DevicesSearchPanel = new DevicesSearchPanel();
				panel.percentHeight = 100;
				panel.percentWidth = 100;
				c.addElement(panel);
				viewers.addElement(c);
			}
			
			private function dirtyChangeHandler(event:Event):void
			{
				if(model.isDirty){
					parentN.label = "*"+model.name;
				}else{
					parentN.label = model.name;
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<sp:Configure/>
		<sp:FastInject property="model" type="{TopologyViewerPM}"/>
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<s:HGroup width="100%" height="100%" gap="0" paddingRight="2" paddingBottom="3" paddingLeft="2">
		<s:BorderContainer width="100%" height="100%">
			<presentation:TopologyCanvas id="canvas" width="100%" height="100%"/>
		</s:BorderContainer>
		<s:Spacer width="2"/>
		<s:VGroup id="right" width="200" height="100%" gap="-1" paddingLeft="0" paddingRight="0" paddingTop="0">
			<s:Group width="100%" height="100%" clipAndEnableScrolling="true">
				<s:BorderContainer  styleName = "normalBack_sys" height = "28" left="-1" right="-1" top="-1"/>
				<mx:TabNavigator id="viewers" left="-1" right="-1" bottom="-1" top="2"><!-- selectedIndex="@{model.selIndex}"-->
					<s:NavigatorContent width="100%" height="100%" 
										label="大纲">
						<tree:LocalTreeBase width="100%" height="100%" id="outline"
											dataProvider="{model.canvas.domain.devicesXML}"
											labelField="@name" showRoot="false"
											selectedItem="@{model.selectedDeviceXML}"
											change="{model.outlineSelectedChangeHandler(outline.selectedItem as XML)}"/>
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" 
										label="属性">
						<s:DataGrid width="100%" height="100%" dataProvider="{model.canvas.domain.focusNode.focusDevice.properties}">
							<s:columns>
								<s:ArrayList>
									<s:GridColumn headerText="属性名" width="60">
										<s:itemRenderer>
											<fx:Component>
												<s:GridItemRenderer>
													<s:HGroup width="100%" height="22" horizontalAlign="left" verticalAlign="middle" paddingLeft="5">
														<s:Label text="{data.key}"/>
													</s:HGroup>
												</s:GridItemRenderer>
											</fx:Component>
										</s:itemRenderer>
									</s:GridColumn>
									<s:GridColumn headerText="属性值" editable="false" width="200" >
										<s:itemRenderer>
											<fx:Component>
												<s:GridItemRenderer>
													<s:HGroup id="group" width="100%" height="22" horizontalAlign="left" verticalAlign="middle" paddingLeft="5">
														<s:TextInput width="100%" text="{data.value}" textAlign="left" borderVisible="false" editable="false"/>
													</s:HGroup>
												</s:GridItemRenderer>
											</fx:Component>
										</s:itemRenderer>
									</s:GridColumn>
								</s:ArrayList>
							</s:columns>
						</s:DataGrid>
					</s:NavigatorContent>
				</mx:TabNavigator>
			</s:Group>
			<container:TitleContainer title="鹰眼 " width="100%" height="26" buttonMode="false"/>
			<presentation:HawkeyeViewer id="hawkeye"/>
		</s:VGroup>
	</s:HGroup>
</s:Group>
